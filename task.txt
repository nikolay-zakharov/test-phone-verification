Техническое задание для прохождения собеседования на вакансию middle-разработчик (Symfony).

Реализовать API метод регистрации/авторизации пользователя по номеру телефона.

1. Запрос кода подтверждения.
Метод POST

Логика:
 1. Сгенерировать 4-х значный код, сохранить в БД и вернуть в ответе.
 2. Реализовать контроль отправки - 1 СМС в минуту на номер телефона.
 3. Если код запарашивается повторно в течение минуты - вернуть сгенерированный ранее код. Иначе - сгенерировать новый код и вернуть его. 
 4. Реализовать блокировку - если отправили 3 кода за последние 10-15 минут - блокировка на час. Вернуть соответствующий ответ.

Фактическая отправка СМС не требуется - вместо этого в составе ответа сервера вернуть поле, содержащее этот код.
Текущий код подтверждения сохранять в базе или кэше.    

2. Получение кода подтверждения.
Метод POST

Логика:
   1. Код указан неверный - вернуть ошибку.
   2. Код указан верный:
      2.1 Если пользователя с таким номером телефона ещё нет в системе - создаём и возвращаем что-то типа "Вы успешно зарегистрировались" и его id
      2.2 Если пользователь с этим номером телефона уже есть - "Вы успешно авторизовались" и его id
   Для временного хранения номера телефона незарегистрированных пользователей может использоваться как кэш, так и БД. После успешной регистрации номер телефона должен быть привязан к пользователю (Вид связи - на Ваше усмотрение: отдельное поле пользователя, OneToOne, OneToMany(один пользователь - много телефонов))
      
Требования:
   1. PHP 8.4
   2. Symfony 7.2
   3. БД - PostgreSQL
   4. Получение/возвращение данных в формате json. Наименование полей - на Ваше усмотрение.   
   5. Выполненное задание - ссылка на открытый git-репозиторий. Все переменные окружения - в .env.

Будет большим плюсом:
   1. Контейнеризация с использованием docker: 
      1.1. Формат именования контейнеров: Префикс - "фамилия_имя-" (например, ivanov_ivan-php, ivanov_ivan-postgres и т.д.).
      1.2. Настройка основного контейнера с кодом для работы с отладчиком xdebug. Желательно, xdebug.client_host, xdebug.idekey - в .env. 
   2. Использование кэширония при помощи Redis для контроля отправки СМС.

